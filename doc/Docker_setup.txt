docker run  -d --publish 8080:8080 --restart always --volume ~/magic_mirror/config:/opt/magic_mirror/config --volume ~/magic_mirror/modules:/opt/magic_mirror/modules --name magic_mirror bastilimbach/docker-magicmirror


docker run  -d --publish 80:8080 --restart always --volume ~/magic_mirror/config:/opt/magic_mirror/config --volume ~/magic_mirror/modules:/opt/magic_mirror/modules --name magic_mirror MichMich/MagicMirror



docker run  -d --publish 8080:8080 --restart always --name magicmirror magicmirror

docker run  -d --publish 8080:8080 --volume Z:/raspberry_pi/MagicMirror/config:/opt/magic_mirror/config --volume Z:/raspberry_pi/MagicMirror/modules:/opt/magic_mirror/modules --name magic_mirror bastilimbach/docker-magicmirror

docker run  -d --publish 8080:8080 --volume Z:/raspberry_pi/MagicMirror_Plain/config:/opt/magic_mirror/config --volume Z:/raspberry_pi/MagicMirror_Plain/modules:/opt/magic_mirror/modules --name magicmirror magicmirror
docker run  -d --publish 8080:8080 --restart always --network=host --volume ~/magic_mirror/config:/opt/magic_mirror/config --volume ~/magic_mirror/modules:/opt/magic_mirror/modules --volume /opt/vc/bin:/opt/vc/bin --device=/dev/vchiq -e LD_LIBRARY_PATH=/opt/vc/lib -v /opt/vc:/opt/vc:ro --name mm karsten13/mm_hyp

docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix --net host -e DISPLAY=$DISPLAY --entrypoint bash --name mm karsten13/mm_hyp

--cap-add=SYS_ADMIN 
--network=host 

-v /usr/lib/arm-linux-gnueabihf:/usr/lib/arm-linux-gnueabihf -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/snd

$ docker run -it \
    --net host \ # may as well YOLO
    --cpuset-cpus 0 \ # control the cpu
    --memory 512mb \ # max memory it can use
    -v /tmp/.X11-unix:/tmp/.X11-unix \ # mount the X11 socket
    -e DISPLAY=unix$DISPLAY \ # pass the display
    -v $HOME/Downloads:/root/Downloads \ # optional, but nice
    -v $HOME/.config/google-chrome/:/data \ # if you want to save state
    --device /dev/snd \ # so we have sound
    --name chrome \
    jess/chrome


####
xauth list liefert:
raspi1/unix:0  MIT-MAGIC-COOKIE-1  4b34089dcdceaac4db4c7afdcccf7de6

--net=host -e DISPLAY -v /tmp/.X11-unix

Nützliches:
docker build -t magicmirror .
docker exec -it magicmirror /bin/sh

	ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1", "192.168.1.1/24", "172.17.0.2/16"],

	
docker images -a --format "{{.ID}}: {{.Repository}}" | grep '<none>' | %{ $a=$_.Split(':'); Write-Host $a[0]; }	
docker images -a --format "{{.Repository}}:{{.ID}}" | grep '<none>' | %{ $a=$_.Split(':'); Write-Host $a[1]; }
docker images -a --format "{{.Repository}}:{{.ID}}" | grep '<none>' | %{ $a=$_.Split(':'); if ($a[1] -match "[a-z,0-9]") { Write-Host $a[1]; }}
docker images -a --format "{{.Repository}}:{{.ID}}" | grep '<none>' | %{ $a=$_.Split(':'); if ($a[0] -match "<none>") { Write-Host $a[1]" "  -noNewLine; }}



Image für pi raspian
https://www.raspberrypi.org/downloads/raspbian/

user: pi
pwd: raspberry

Mit LAN-Kabel verbinden und Zugriff per putty

#########WLAN:

sudo nano /etc/network/interfaces

Inhalt so einfügen:
auto wlan0
allow-hotplug wlan0
iface wlan0 inet static
address 192.168.1.22
netmask 255.255.255.0
gateway 192.168.1.1
wpa-ssid "TP-LINK_K13"
wpa-psk "xy"

wlan neu starten
sudo ifdown wlan0
sudo ifup wlan0

--> ssh Session fliegt weg, mit putty neu auf neuer adress einloggen


#########Passwörter
aktueller Benutzer " passwd" eingeben, danach altes pwd, 2x Neues
sudo -i wechselt zu root, dort ebenfalls pwd setzen (altes ist leer)

#########hostname ändern
hostname (zeigt an)
sudo hostname -b {NEUER_NAME}

auch ändern in Fundstellen von 
sudo grep -lr "raspberrypi" /etc/*

sudo reboot

 
#########Verzeichnisse manuell anlegen
mkdir ~/magic_mirror
mkdir ~/magic_mirror/config
mkdir ~/magic_mirror/modules

sudo apt-get update

#########Docker
curl -sSL get.docker.com | sh

Set Docker to auto-start

$ sudo systemctl enable docker

You can now reboot the Pi, or start the Docker daemon with:

$ sudo systemctl start docker

Enable Docker client

The Docker client can only be used by root or members of the docker group. Add pi or your equivalent user to the docker group:

$ sudo usermod -aG docker pi

sudo apt-get purge python-pip
curl https://bootstrap.pypa.io/get-pip.py | sudo python

sudo pip install docker-compose



##########RemoteDesktopverbindung
sudo apt-get -y xrdp 

########## Autostart im Host-Pi:

sudo apt-get install -y unclutter 

nano /home/pi/.config/lxsession/LXDE-pi/autostart

#Screensaver aus
@xset s noblank
@xset s off
@xset -dpms
@unclutter -idle 0.1 -pi


#wichtig für Display<->Docker:
nano ~/.bashrc

export DISPLAY=:0.0
xhost +local:root	

#wichtig
sudo raspi-config: boot wait for network = on 
-->sonst wird MM nicht richtig aufgebaut weil zu früh gestartet bzw. Netzwerk noch nicht da

##########################

Ordner modules und config für mm übertragen

###########git repo docker mm

git clone https://github.com/khassel/docker-mm.git ~/docker-mm

###########container holen

docker pull karsten13/mm_hyp
