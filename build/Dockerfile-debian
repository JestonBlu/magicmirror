ARG buildarch
ARG BUILDER_IMG
ARG NODE_VERSION
ARG DEBIAN_VERSION
ARG SLIM
FROM ${BUILDER_IMG} as builder
FROM ${buildarch}node:${NODE_VERSION}-${DEBIAN_VERSION}${SLIM}
LABEL maintainer="Karsten Hassel"

USER root

WORKDIR /opt/magic_mirror

# copy startscripts into container:
COPY *.sh /opt/magic_mirror/

# procps, arp-scan and sudo needed for the module MMM-NetworkScanner
# sudo needed for the module MMM-Remote-Control
# sudo needed for cp in entrypoint
ARG buildarch
ARG NODE_ENV
RUN set -e; \
    apt-get update; \
    _pck="git nano sudo gettext openssl ca-certificates wget tini"; \
    if [ ! -z "${buildarch}" ] || [ "${NODE_ENV}" = "test" ]; then \
      _pck="${_pck} libgtk-3-0 libx11-xcb-dev libnss3-dev libxss1 libxtst6 libasound2 libdrm2 libgbm1 libxshmfence1 fonts-arphic-uming procps arp-scan"; \
    fi; \
    [ "${NODE_ENV}" = "test" ] && _pck="${_pck} xvfb"; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install ${_pck}; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/*; \
    usermod -a -G video node; \
    echo "node ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers; \
    chmod +x *.sh; \
    chown node:node *.sh; \
    c_rehash;

USER node

COPY --from=builder --chown=node:node /opt/magic_mirror /opt/magic_mirror

ARG NODE_ENV
ENV ELECTRON_DISABLE_SANDBOX=1 \
    DBUS_SESSION_BUS_ADDRESS="unix:path=/var/run/dbus/system_bus_socket" \
    NODE_ENV=${NODE_ENV} \
    MM_OVERRIDE_DEFAULT_MODULES=true \
    MM_OVERRIDE_CSS=true

EXPOSE 8080

ENTRYPOINT ["/usr/bin/tini", "--", "./entrypoint.sh"]