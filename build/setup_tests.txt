
export MagicMirror_Version=v2.10.0
export myimage=circleci/node:latest-browsers
export DOCKER_USER=karsten13
export BuildEnv=debian
docker build --build-arg MagicMirror_Version=${MagicMirror_Version} --build-arg myimage=${myimage} -t $DOCKER_USER/magicmirror:${BuildEnv}_${MagicMirror_Version} .


export MagicMirror_Version=v2.10.0
export myimage=node:slim
export DOCKER_USER=karsten13
export BuildEnv=debian
export Spectron_Version=^8.0.0
export Electron_Version=^6.1.7
docker build \
      --build-arg MagicMirror_Version=${MagicMirror_Version} \
      --build-arg myimage=${myimage} \
      --build-arg BuildEnv=${BuildEnv} \
      --build-arg Spectron_Version=${Spectron_Version} \
      --build-arg Electron_Version=${Electron_Version} \
      -t $DOCKER_USER/magicmirror:${BuildEnv}_${MagicMirror_Version}${BuildRef} .




export MagicMirror_Version=v2.10.0
export myimage=arm32v7/node:fix
export DOCKER_USER=karsten13
export BuildEnv=rpi
export Spectron_Version=^8.0.0
export Electron_Version=^6.1.7
docker build \
  --build-arg MagicMirror_Version=${MagicMirror_Version} \
  --build-arg myimage=${myimage} \
  --build-arg Spectron_Version=${Spectron_Version} \
  --build-arg Electron_Version=${Electron_Version} \
  -t $DOCKER_USER/magicmirror:${BuildEnv}_${MagicMirror_Version}${BuildRef} .



Xvfb :99 -screen 0 1024x768x16 &
export DISPLAY=:99

xvfb-run -n 99 -e /dev/stdout npm run test:e2e



    "preinstall": "if arch | grep -Eq '^armv.*' ; then npm install electron --arch=armv7l; fi",



############################################

docker run -d -u node --name mm --rm --privileged --entrypoint sleep karsten13/magicmirror:debian_v2.10.0 infinity

docker exec mm ./entrypoint.sh
docker exec mm /docker-entrypoint.sh
#docker exec mm Xvfb :99 -screen 0 1024x768x16 &
docker exec mm npm run test:e2e
docker exec mm npm run test:unit
docker exec mm grunt
docker rm -f mm


7.1.7:

1373 (node:74) UnhandledPromiseRejectionWarning: HTTPError: Response code 404 (Not Found)
1374     at EventEmitter.<anonymous> (/opt/magic_mirror/node_modules/got/source/as-stream.js:35:24)
1375     at EventEmitter.emit (events.js:305:20)
1376     at module.exports (/opt/magic_mirror/node_modules/got/source/get-response.js:22:10)
1377     at ClientRequest.handleResponse (/opt/magic_mirror/node_modules/got/source/request-as-event-emitter.js:155:5)
1378     at Object.onceWrapper (events.js:412:26)
1379     at ClientRequest.emit (events.js:317:22)
1380     at ClientRequest.origin.emit (/opt/magic_mirror/node_modules/@szmarczak/http-timer/source/index.js:37:11)
1381     at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:601:27)
1382     at HTTPParser.parserOnHeadersComplete (_http_common.js:116:17)
1383     at TLSSocket.socketOnData (_http_client.js:470:22)
1384 (node:74) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)
1385 (node:74) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.


node@49ed36e1de3c:/opt/magic_mirror/node_modules$ grep -iRl '@szmarczak/http-timer' ./
./got/source/request-as-event-emitter.js
./got/package.json
./@szmarczak/http-timer/README.md
./@szmarczak/http-timer/package.json
./defer-to-connect/package.json
./sumchecker/yarn.lock
node@49ed36e1de3c:/opt/magic_mirror/node_modules$ grep -iRl '"got"' ./
./got/readme.md
./got/package.json
./psl/dist/psl.js
./psl/dist/psl.min.js
./psl/data/rules.json
./data-urls/node_modules/whatwg-url/package.json
./@electron/get/package.json
./@electron/get/dist/cjs/GotDownloader.js
./global-agent/package.json
./whatwg-encoding/package.json
./es6-promisify/README.md
node@49ed36e1de3c:/opt/magic_mirror/node_modules$ cat ./data-urls/node_modules/whatwg-url/package.json | grep "got"
    "got": "^9.2.2",
node@49ed36e1de3c:/opt/magic_mirror/node_modules$ cat ./@electron/get/package.json | grep "got"        
    "got": "^9.6.0",
    "@types/got": "^9.4.4",
node@49ed36e1de3c:/opt/magic_mirror/node_modules$ cat ./global-agent/package.json | grep "got"
    "got": "^9.6.0",
node@49ed36e1de3c:/opt/magic_mirror/node_modules$ cat ./whatwg-encoding/package.json | grep "got"
    "got": "^9.0.0",



    "@electron/get": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/@electron/get/-/get-1.7.2.tgz",
      "integrity": "sha512-LSE4LZGMjGS9TloDx0yO44D2UTbaeKRk+QjlhWLiQlikV6J4spgDCjb6z4YIcqmPAwNzlNCnWF4dubytwI+ATA==",
      "optional": true,
      "requires": {
        "debug": "^4.1.1",
        "env-paths": "^2.2.0",
        "fs-extra": "^8.1.0",
        "global-agent": "^2.0.2",
        "global-tunnel-ng": "^2.7.1",
        "got": "^9.6.0",
        "sanitize-filename": "^1.6.2",
        "sumchecker": "^3.0.1"
      },


{
  "dependencies": {
    "@electron/get": {
      "version": "1.7.2",
      "from": "@electron/get@1.7.2",
      "dependencies": {
        "got": {
          "version": "10.2.1",
          "from": "got@~9.6.0"
        }
      }
    }
  }
}


############################################################################

  --include-path /usr/local/bin \
  --include-path /usr/local/lib \
  --include-path /etc \
  --include-path /lib/arm-linux-gnueabihf \
  --include-path /sbin \
  --include-path /usr/bin \
  --include-path /usr/lib/arm-linux-gnueabihf \
  --include-path /usr/lib/node_modules/npm \
  --include-path /usr/share/fonts \


docker-slim build \
  --continue-after timeout \
  --http-probe=false \
  --env BuildEnv=rpi \
  --env StartEnv=slim \
  --env DISPLAY=unix:0.0 \
  --env LD_LIBRARY_PATH=/opt/vc/lib \
  --mount /opt/vc:/opt/vc/:ro \
  --mount /run/systemd:/run/systemd \
  --mount /tmp/.X11-unix:/tmp/.X11-unix \
  --mount $(pwd)/entrypoint.sh:/entrypoint.sh \
  --show-clogs \
  --entrypoint /entrypoint.sh \
  --include-path /usr/local/lib/node_modules/npm \
  --include-path /bin \
  --include-path /opt/magic_mirror \
  --include-path /home/node \
  --include-path /usr/lib/sudo \
  --include-path /usr/share/arp-scan \
  --include-path /lib/arm-linux-gnueabihf \
  --include-path /sbin \
  --include-path /lib/systemd \
  --tag karsten13/magicmirror:rpi_test-slim karsten13/magicmirror:rpi_test
  
  
  
pi@pi4:~/magicmirror/build $ cat entrypoint.sh
#!/bin/sh

mkdir -p /opt/magic_mirror/modules
mkdir -p /opt/magic_mirror/config

if [ ! -f /opt/magic_mirror/modules/default/defaultmodules.js ]; then
  cp -rn /opt/magic_mirror/mount_ori/modules/. /opt/magic_mirror/modules
fi

if [ ! -f /opt/magic_mirror/config/config.js ]; then
  cp -rn /opt/magic_mirror/mount_ori/config/. /opt/magic_mirror/config
fi

if [ "$StartEnv" = "test" ]; then

  echo "start tests"
  Xvfb :99 -screen 0 1024x768x16 &
  export DISPLAY=:99

  # adjust test timeouts
  sed -i "s:test.timeout(10000):test.timeout(30000):g" tests/e2e/global-setup.js
  cat tests/e2e/global-setup.js

  grunt
  npm run test:unit
  npm run test:e2e

elif [ "$StartEnv" = "slim" ]; then

  echo "start slim entrypoint"

  rm -rf /opt/magic_mirror/magicmirror/
  cd /opt/magic_mirror

  echo git clone
  git clone https://gitlab.com/khassel/magicmirror.git

  echo npm install
  cd /opt/magic_mirror/vendor
  npm install || true

  cd /opt/magic_mirror

  if [ "$BuildEnv" = "rpi" ]; then
    echo arp-scan
    sudo arp-scan localhost &
    echo npm start
    npm start || true
  fi

  echo node serveronly
  node serveronly

else

  echo "start magicmirror"

  exec $1 $2
fi
  
