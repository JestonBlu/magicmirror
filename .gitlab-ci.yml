stages:
  - build
  - manifest

image: karsten13/docker:stable

variables:
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  GIT_DEPTH: 1
  DOCKER_USER: karsten13
  MagicMirror_Version: v2.8.0

services:
- docker:dind

before_script:
- docker info
- docker-slim version

.whenrun:
  only:
  - master
  tags:
  - docker

.build:
  script:
  - echo "BuildEnv="$BuildEnv
  - echo "myimage="$myimage
  - echo "MagicMirror_Version="$MagicMirror_Version
  # build image
  - cd ./build
  - |
    if [ "$BuildEnv" = "rpi" ]; then \
      cp /tmp/slim/qemu-arm-static .; \
    else \
      touch qemu-arm-static; \
    fi;     
  - docker build --build-arg BuildEnv=${BuildEnv} --build-arg MagicMirror_Version=${MagicMirror_Version} --build-arg myimage=${myimage} -t $DOCKER_USER/magicmirror:${BuildEnv}_${MagicMirror_Version} .
  # push image
  - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
  - docker push "$DOCKER_USER"/magicmirror:"$BuildEnv"_"$MagicMirror_Version"
  - docker tag "$DOCKER_USER"/magicmirror:"$BuildEnv"_"$MagicMirror_Version" "$DOCKER_USER"/magicmirror:"$BuildEnv"
  - docker push "$DOCKER_USER"/magicmirror:"$BuildEnv"
  - cd ..
  - |
    SLIM_PARAMS="--env BuildEnv=$BuildEnv --http-probe=false --include-path /bin --include-path /opt/magic_mirror --entrypoint /opt/magic_mirror/slim-entrypoint.sh --tag $DOCKER_USER/magicmirror:$BuildEnv-slim $DOCKER_USER/magicmirror:$BuildEnv"
    if [ "$BuildEnv" = "rpi" ]; then \
      docker-slim build \
      --continue-after timeout \
      --env DISPLAY=unix:0.0 \
      --env LD_LIBRARY_PATH=/opt/vc/lib \
      --mount /opt/vc:/opt/vc/:ro \
      --mount /run/systemd:/run/systemd \
      --mount /tmp/.X11-unix:/tmp/.X11-unix \
      --include-path /etc \
      --include-path /lib/arm-linux-gnueabihf \
      --include-path /lib/systemd \
      --include-path /sbin \
      --include-path /usr/bin \
      --include-path /usr/lib/arm-linux-gnueabihf \
      --include-path /usr/lib/sudo \
      --include-path /usr/lib/node_modules/npm \
      --include-path /usr/local/lib \
      --include-path /usr/share/fonts \
      --include-path /usr/share/arp-scan \
      $SLIM_PARAMS; \
    else \
      docker-slim build \
      --include-path /usr/local/lib/node_modules/npm \
      $SLIM_PARAMS; \
    fi;     
  - docker push "$DOCKER_USER"/magicmirror:"$BuildEnv"-slim
  extends: .whenrun

build_debian:
  stage: build
  variables:
    BuildEnv: debian
    myimage: node:slim
  extends: .build

build_rpi:
  stage: build
  variables:
    BuildEnv: rpi
    myimage: arm32v7/node:slim
  extends: .build

manifest:
  stage: manifest
  script:
  - docker pull $DOCKER_USER/magicmirror:rpi-slim
  - docker pull $DOCKER_USER/magicmirror:debian-slim
  - docker manifest create $DOCKER_USER/magicmirror:latest $DOCKER_USER/magicmirror:rpi-slim $DOCKER_USER/magicmirror:debian-slim
  - docker manifest annotate --os linux --arch amd64 $DOCKER_USER/magicmirror:latest $DOCKER_USER/magicmirror:debian-slim
  - docker manifest annotate --os linux --arch arm $DOCKER_USER/magicmirror:latest $DOCKER_USER/magicmirror:rpi-slim
  - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
  - docker manifest push $DOCKER_USER/magicmirror:latest  
  extends: .whenrun

after_script:
- docker logout