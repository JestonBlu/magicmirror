stages:
  - build
  - test

variables:
  GIT_DEPTH: 1
  KANIKO_IMG: ${DOCKER_USER}/kaniko-executor:latest
  MagicMirror_Version: v2.11.0

.build:
  stage: build
  image:
    name: ${KANIKO_IMG}
    entrypoint: [""]
  variables:
    GitRepo: https://github.com/MichMich/MagicMirror.git
  script:
  # set branch name used from MagicMirror git-repo
  - |
    if [ "${CI_COMMIT_BRANCH}" == "master" ]; then
      echo "branch=master"
      export BuildRef=${MagicMirror_Version}
    else
      echo "branch<>master"
      export BuildRef=develop
    fi
  - echo "MagicMirror-BuildRef="${BuildRef}
  # set build arch
  - |
    if [ -n "${buildarch}" ]; then
      export imgarch=arm
      /register
    else
      export imgarch=amd64
    fi
  # docker login
  - docker.login
  # build and push
  - |
    /kaniko/executor --context $CI_PROJECT_DIR/build \
      --dockerfile $CI_PROJECT_DIR/build/Dockerfile \
      --destination ${DOCKER_USER}/magicmirror:${CI_COMMIT_BRANCH}_${imgarch} \
      --build-arg buildarch=${buildarch} \
      --build-arg BuildRef=${BuildRef} \
      --build-arg GitRepo=${GitRepo}
  # start test pipeline
  - |
    if [ "${imgarch}" == "amd64" ]; then
      wget --post-data "token=${trigger_token}&ref=${CI_COMMIT_BRANCH}&variables[testarch]=${imgarch}" https://gitlab.com/api/v4/projects/10637719/trigger/pipeline
    fi
  - |
    if [ "${CI_COMMIT_BRANCH}" == "master" ]; then
      docker.manifest ${DOCKER_USER}/magicmirror:${CI_COMMIT_BRANCH} latest
      docker.manifest ${DOCKER_USER}/magicmirror:${CI_COMMIT_BRANCH} ${MagicMirror_Version}
      docker.readme magicmirror
    else
      docker.manifest ${DOCKER_USER}/magicmirror:${CI_COMMIT_BRANCH} ${CI_COMMIT_BRANCH}
    fi
  after_script:
  - docker.logout
  rules:
  - if: $testarch == null && $CI_COMMIT_BRANCH =~ /^master$|^develop$/
  tags:
  - docker

build_amd64:
  extends: .build

build_arm:
  variables:
    buildarch: "arm32v7/"
  extends: .build

test_amd64:
  stage: test
  variables:
    GIT_STRATEGY: none
  image:
    name: ${DOCKER_USER}/magicmirror:${CI_COMMIT_BRANCH}_${testarch}
    entrypoint: [""]
  script:
  - sudo apt-get update
  - sudo apt-get install -y xvfb
  - |
    if [ "${CI_COMMIT_BRANCH}" == "master" ]; then \
      sudo npm install -g grunt-cli; \
    fi;     
  - cd /opt/magic_mirror
  - npm install
  - StartEnv=test ./entrypoint.sh
  tags:
  - docker
  rules:
  - if: $testarch == "amd64"
