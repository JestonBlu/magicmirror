stages:
  - build
  - manifest
  - test

image: ${DOCKER_USER}/docker:stable

variables:
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  GIT_DEPTH: 1
  MagicMirror_Version: v2.10.0

services:
- docker:dind

before_script:
- docker info
- |
  if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then \
    echo "branch=master"; \
  # only set if you want to override the provided values from the mm project:
  # export Spectron_Version="^9.0.0" \
  # export Electron_Version="^7.1.9" \
  else \
    echo "branch<>master"; \
    export BuildRef="_test"; \
    # update all dependencies to latest (except jsdom must stay on 11.12.0):
    export UseLatestDependencies="true"; \
  fi;     

.whenrun:
  only:
  - master
  - develop
  tags:
  - docker

.build:
  script:
  - echo "BuildEnv="${BuildEnv}
  - echo "myimage="${myimage}
  - echo "MagicMirror_Version="${MagicMirror_Version}
  - |
    if [ -n "${Spectron_Version}" ]; then echo "Spectron_Version="${Spectron_Version}; fi
    if [ -n "${Electron_Version}" ]; then echo "Electron_Version="${Electron_Version}; fi
    # build image
  - cd ./build
  - |
    if [ "${BuildEnv}" = "rpi" ]; then \
      cp /tmp/qemu/qemu-arm-static .; \
    else \
      touch qemu-arm-static; \
    fi;     
  - |
    docker build \
      --build-arg MagicMirror_Version=${MagicMirror_Version} \
      --build-arg myimage=${myimage} \
      --build-arg UseLatestDependencies=${UseLatestDependencies} \
      --build-arg Spectron_Version=${Spectron_Version} \
      --build-arg Electron_Version=${Electron_Version} \
      -t $DOCKER_USER/magicmirror:${BuildEnv}_${MagicMirror_Version}${BuildRef} .
  - docker login -u=${DOCKER_USER} -p=${DOCKER_PASS}
  - docker push ${DOCKER_USER}/magicmirror:${BuildEnv}_${MagicMirror_Version}${BuildRef}
  - docker tag ${DOCKER_USER}/magicmirror:${BuildEnv}_${MagicMirror_Version}${BuildRef} ${DOCKER_USER}/magicmirror:${BuildEnv}${BuildRef}
  - docker push ${DOCKER_USER}/magicmirror:${BuildEnv}${BuildRef}
  - cd ..
  - |
    if [ "${BuildEnv}" = "rpi" ]; then \
      SLIM_PARAMS="--env DISPLAY=unix:0.0 --env LD_LIBRARY_PATH=/opt/vc/lib --mount /opt/vc:/opt/vc/:ro --mount /run/systemd:/run/systemd --mount /tmp/.X11-unix:/tmp/.X11-unix --include-path /usr/share/arp-scan --include-path /lib/arm-linux-gnueabihf"; \
    fi; \
    docker run -e DOCKER_HOST=tcp://$(grep docker /etc/hosts | cut -f1):2375 dslim/docker-slim build \
    --continue-after timeout \
    --http-probe=false \
    --env BuildEnv=$BuildEnv \
    --env StartEnv=slim \
    --show-clogs \
    --include-path /usr/local/lib/node_modules/npm \
    --include-path /bin \
    --include-path /opt/magic_mirror \
    --include-path /home/node \
    --include-path /usr/lib/sudo \
    --include-path /sbin \
    --include-path /lib/systemd \
    ${SLIM_PARAMS} --tag ${DOCKER_USER}/magicmirror:${BuildEnv}${BuildRef}-slim \
    ${DOCKER_USER}/magicmirror:${BuildEnv}${BuildRef}
    docker push ${DOCKER_USER}/magicmirror:${BuildEnv}${BuildRef}-slim
  extends: .whenrun

build_debian:
  stage: build
  variables:
    BuildEnv: debian
    myimage: node:slim
  extends: .build

build_rpi:
  stage: build
  variables:
    BuildEnv: rpi
    myimage: arm32v7/node:13.5-slim
  extends: .build

manifest:
  stage: manifest
  script:
  - docker pull ${DOCKER_USER}/magicmirror:rpi-slim
  - docker pull ${DOCKER_USER}/magicmirror:debian-slim
  - docker manifest create ${DOCKER_USER}/magicmirror:latest ${DOCKER_USER}/magicmirror:rpi-slim ${DOCKER_USER}/magicmirror:debian-slim
  - docker manifest annotate --os linux --arch amd64 ${DOCKER_USER}/magicmirror:latest ${DOCKER_USER}/magicmirror:debian-slim
  - docker manifest annotate --os linux --arch arm ${DOCKER_USER}/magicmirror:latest ${DOCKER_USER}/magicmirror:rpi-slim
  - docker login -u=${DOCKER_USER} -p=${DOCKER_PASS}
  - docker manifest push ${DOCKER_USER}/magicmirror:latest  
  - update_docker_readme.sh magicmirror
  only:
  - master
  tags:
  - docker

test:
  stage: test
  script:
  - cd test
  - docker build --build-arg myimage=${DOCKER_USER}/magicmirror:debian_${MagicMirror_Version}${BuildRef} -t $DOCKER_USER/magicmirror:mm_tests .
  - docker run --rm --privileged ${DOCKER_USER}/magicmirror:mm_tests
  extends: .whenrun

after_script:
- docker logout