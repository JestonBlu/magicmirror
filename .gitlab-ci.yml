stages:
  - build
  - test

variables:
  MagicMirror_Version: v2.10.1

.whenrun:
  only:
  - master
  - develop
  tags:
  - docker

build:
  stage: build
  variables:
    # When using dind, it's wise to use the overlayfs driver for improved performance.
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    GIT_DEPTH: 1
  image: ${DOCKER_USER}/docker:stable
  services:
  - docker:dind
  script:
  - docker info
  - |
    if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then \
      echo "branch=master"; \
      export BuildRef=${MagicMirror_Version}; \
    else \
      echo "branch<>master"; \
      export BuildRef=${CI_COMMIT_REF_NAME}; \
    fi;     
  - echo "BuildRef="${BuildRef}
  - cd ./build
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker login -u=${DOCKER_USER} -p=${DOCKER_PASS}
  - docker context create xbuilder-context
  - docker buildx create xbuilder-context --name xbuilder --use
  - docker buildx ls
  - docker buildx build --progress "plain" --platform "linux/amd64,linux/arm/v7" --build-arg "BuildRef=${BuildRef}" --push -t $DOCKER_USER/magicmirror:${CI_COMMIT_REF_NAME} .
  - |
    if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then \
      docker buildx build --progress "plain" --platform "linux/amd64,linux/arm/v7" --build-arg "BuildRef=${BuildRef}" --push -t $DOCKER_USER/magicmirror:${BuildRef} .; \
      docker buildx build --progress "plain" --platform "linux/amd64,linux/arm/v7" --build-arg "BuildRef=${BuildRef}" --push -t $DOCKER_USER/magicmirror:latest .; \
    fi;     
  - docker logout
  extends: .whenrun

test:
  stage: test
  variables:
    GIT_STRATEGY: none
  image: 
    name: ${DOCKER_USER}/magicmirror:${CI_COMMIT_REF_NAME}
    entrypoint: [""]
  script:
  - sudo apt-get update
  - sudo apt-get install -y xvfb
  - sudo npm install -g grunt-cli
  - cd /opt/magic_mirror
  - npm install
  - cp -v package-lock.json ${CI_PROJECT_DIR}
  - StartEnv=test ./entrypoint.sh
  artifacts:
    paths:
    - package-lock.json
  allow_failure: true
  extends: .whenrun
